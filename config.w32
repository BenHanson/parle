// $Id$
// vim:ft=javascript

ARG_ENABLE("parle", "Enable lexer/parser support", "no");

if (PHP_PARLE != "no") {
	if (CHECK_HEADER_ADD_INCLUDE("lexertl/generator.hpp", "FLAGS_PARLE", PHP_PARLE + ";" + configure_module_dirname + "\\lib") &&
		CHECK_HEADER_ADD_INCLUDE("parsertl/generator.hpp", "FLAGS_PARLE", PHP_PARLE + ";" + configure_module_dirname + "\\lib") &&
		CHECK_HEADER_ADD_INCLUDE("variant.hpp", "FLAGS_PARLE", PHP_PARLE + ";" + configure_module_dirname + "\\lib\\mpark")
	) {
		EXTENSION("parle", "parle.cpp", PHP_PARLE_SHARED, "/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1");
		ADD_FLAG("CFLAGS_PARLE", ' /I lib /I lib/mpark /EHsc -std:c++14');
		ADD_FLAG("CFLAGS_BD_EXT_PARLE", ' /D ZEND_WIN32_KEEP_INLINE=1 /U ZEND_WIN32_FORCE_INLINE ');
		PHP_INSTALL_HEADERS("ext/parle", "php_parle.h");
		AC_DEFINE("HAVE_PARLE", 1, "Have parle extension");
	} else {
		WARNING("parle not enabled; libraries and headers not found");
	}
}

