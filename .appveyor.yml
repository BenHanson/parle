version: "{branch}.build.{build}"
skip_tags: true

branches:
        only:
                - master

clone_folder:  c:\projects\parle

install:
        ps: |
                if (-not (Test-Path c:\build-cache)) {
                        mkdir c:\build-cache
                }
                $bname = 'php-sdk-' + $env:BIN_SDK_VER + '.zip'
                if (-not (Test-Path c:\build-cache\$bname)) {
                        (new-object net.webclient).DownloadFile('https://github.com/OSTC/php-sdk-binary-tools/archive/' + $bname, 'c:\build-cache\' + $bname)
                }
                $dname0 = 'php-sdk-binary-tools-php-sdk-' + $env:BIN_SDK_VER
                $dname1 = 'php-sdk-' + $env:BIN_SDK_VER
                if (-not (Test-Path c:\build-cache\$dname1)) {
                        7z x c:\build-cache\$bname -oc:\build-cache
                        move c:\build-cache\$dname0 c:\build-cache\$dname1
                }

cache:
        c:\build-cache
        c:\build-cache -> .appveyor.yml

environment:
        BIN_SDK_VER: 2.0.10
        matrix:
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
                  ARCH: x64
                  VC: vc14
                  PHP_VER: 7.0.22
                  TS: 0
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
                  ARCH: x64
                  VC: vc14
                  PHP_VER: 7.0.22
                  TS: 1
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
                  ARCH: x86
                  VC: vc14
                  PHP_VER: 7.0.22
                  TS: 0
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
                  ARCH: x86
                  VC: vc14
                  PHP_VER: 7.0.22
                  TS: 1


build_script:
        ps: |
                $OutputEncoding = [Console]::OutputEncoding
                $ts_part = ''
                if ($env:TS) { $ts_part = '-nts' }
                $bname = 'php-devel-pack-' + $env:PHP_VER + $ts_part + '-Win32-' + $env:VC.toUpper() + '-' + $env:ARCH + '.zip'
                if (-not (Test-Path c:\build-cache\$bname)) {
                        (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/releases/archives/' + $bname, 'c:\build-cache\' + $bname)
                }
                $dname0 = 'php-' + $env:PHP_VER + '-devel-' + $env:VC.toUpper() + '-' + $env:ARCH
                $dname1 = 'php-' + $env:PHP_VER + $ts_part + '-devel-' + $env:VC.toUpper() + '-' + $env:ARCH
                if (-not (Test-Path c:\build-cache\$dname1)) {
                        7z x c:\build-cache\$bname -oc:\build-cache
                        move c:\build-cache\$dname0 c:\build-cache\$dname1
                }
                cd c:\projects\parle
                $env:PATH = 'c:\build-cache\' + $dname1 + ';' + $env:PATH
                echo "@echo off" > task.bat
                echo "" >> task.bat
                echo "phpize" >> task.bat
                echo "configure --enable-parle" >> task.bat
                echo "nmake" >> task.bat
                $here = (Get-Item -Path ".\" -Verbose).FullName
                $runner = 'c:\build-cache\php-sdk-' + $env:BIN_SDK_VER + '\phpsdk' + '-' + $env:VC + '-' + $env:ARCH + '.bat'
                $task = $here + '\task.bat'
                echo $runner
                echo $task
                type $task
                & $runner -t $task

